# Azure DevOps Labs Sample Application Pipeline
trigger:
  - none

  variables:
  registryName : <<your registry name>>
  subscriptionName: <<your subscription name>>
  resourceGroupName : <<your resource group>>
  appServiceName : <<your app service name>>
  containerName: devopsvirtuallabs
  registryLocation: South Africa North
  registrySku: Basic
  buildConfiguration: 'Release'
  
pool:
  vmImage: 'ubuntu-latest'
stages:
  - stage: buildanddeploy 
    displayName: Build and deploy
    jobs:
      - job:
        displayName: build
        steps:
        #build the application
        - task: DotNetCoreCLI@2
          displayName: Build
          inputs:
            command: 'build'
            projects: '**/*.csproj'
            arguments: '--configuration=$(buildConfiguration)'

        #test the application
        - task: DotNetCoreCLI@2
          displayName: Test
          inputs:
            command: 'test'
            projects: '**/*Test*.csproj'
            arguments: '--configuration=$(buildConfiguration)'

        #publish
        - task: DotNetCoreCLI@2
          displayName: Publish
          inputs:
            command: 'publish'
            publishWebProjects: true
            arguments: '--configuration=$(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/publish'
            zipAfterPublish: false
            modifyOutputPath: false

        #build container
        - task: Docker@2
          inputs:
            repository: '$(registryName).azurecr.io/$(containerName)'
            command: 'build'
            Dockerfile: '**/Dockerfile'
            buildContext: '$(Build.ArtifactStagingDirectory)/publish/'
            tags: |
              $(Build.BuildId)
              latest

        #push container
        - task: AzureResourceGroupDeployment@2
          displayName: 'Azure Deployment:Ensure Azure Container Registry'
          inputs:
            azureSubscription: '$(subscriptionName)'
            resourceGroupName: $(resourcegroupname)
            location: '$(registryLocation)'
            csmFile: '$(System.DefaultWorkingDirectory)/**/container_registry.json'
            overrideParameters: '-registryName "$(registryName)" -registryLocation "$(registryLocation)" -registrySku "$(registrySku)"'

        - task: Docker@1
          displayName: 'Push an image'
          inputs:
            azureSubscriptionEndpoint: '$(subscriptionName)'
            azureContainerRegistry: '$(registryName).azurecr.io'
            imageName: '$(containerName)'
            command: 'Push an image'
  
  - stage: release
    displayName: Release
    jobs:
    - job:
      displayName: Release to Dev
      steps:
      - task: AzureResourceGroupDeployment@2
        displayName: 'Azure Deployment:Ensure Azure Web App'
        inputs:
          azureSubscription: '$(subscriptionName)'
          resourceGroupName: $(resourcegroupname)
          location: '$(registryLocation)'
          csmFile: '$(System.DefaultWorkingDirectory)/**/web_app_template.json'
          csmParametersFile: '$(System.DefaultWorkingDirectory)/**/web_app_parameters.json'
          overrideParameters: '-dockerRegistryPassword "$(registryPassword)"'

      - task: AzureRmWebAppDeployment@4
        displayName: 'Azure App Service Deploy: Deploy Web App'
        inputs:
          azureSubscription: '$(subscriptionName)'
          appType: webAppContainer
          WebAppName: $(appServiceName)
          DockerNamespace: $(registryName).azurecr.io
          DockerRepository: $(containerName)
          DockerImageTag: '$(Build.BuildId)'
