# Azure DevOps Labs Sample Application Pipeline
trigger:
  - none

variables:
  registryName : <<your registry name>>
  subscriptionName: <<your subscription name>>
  resourceGroupName : <<your resource group>>
  webAppName : <<your app service name>>
  containerImageName: devopsvirtuallabs
  registryLocation: South Africa North
  registrySku: Basic
  buildConfiguration: 'Release'
  
pool:
  vmImage: 'ubuntu-latest'

jobs:
  - job:
    displayName: build
    steps:
    #build the application
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration=$(buildConfiguration)'

    #test the application
    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: 'test'
        projects: '**/*Test*.csproj'
        arguments: '--configuration=$(buildConfiguration)'

    #publish
    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: 'publish'
        publishWebProjects: true
        arguments: '--configuration=$(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/publish'
        zipAfterPublish: false
        modifyOutputPath: false

    #build container
    - task: Docker@2
      inputs:
        repository: '$(registryName).azurecr.io/$(containerImageName)'
        command: 'build'
        Dockerfile: '**/Dockerfile'
        buildContext: '$(Build.ArtifactStagingDirectory)/publish/'
        tags: |
          $(Build.BuildId)
          latest
          
    #push container
    - task: AzureResourceGroupDeployment@2
      displayName: 'Azure Deployment:Ensure Azure Container Registry'
      inputs:
        azureSubscription: '$(subscriptionName)'
        resourceGroupName: $(resourcegroupname)
        location: '$(registryLocation)'
        csmFile: '$(System.DefaultWorkingDirectory)/**/container_registry.json'
        overrideParameters: '-registryName "$(registryName)" -registryLocation "$(registryLocation)" -registrySku "$(registrySku)"'
        deploymentMode: 'Incremental'

    - task: Docker@1
      displayName: 'Push an image'
      inputs:
        azureSubscriptionEndpoint: '$(subscriptionName)'
        azureContainerRegistry: '$(registryName).azurecr.io'
        imageName: '$(containerImageName)'
        command: 'Push an image'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(System.DefaultWorkingDirectory)/src/Templates'
        ArtifactName: 'templates'
        publishLocation: 'Container'